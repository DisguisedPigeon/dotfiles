# Qtile Config File
# http://www.qtile.org/

# Antonio Sarosi
# https://youtube.com/c/antoniosarosi
# https://github.com/antoniosarosi/dotfiles


from libqtile import hook

from settings.keys import mod, keys
from settings.groups import groups
from settings.layouts import layouts, floating_layout
from settings.widgets import widget_defaults, extension_defaults
from settings.screens import screens
from settings.mouse import mouse
from settings.path import qtile_path

from os import path
import subprocess


@hook.subscribe.startup_once
def autostart():
    subprocess.call([path.join(qtile_path, 'autostart.sh')])

<<<<<<< HEAD
=======
for i in groups:
    keys.extend(
        [
            # mod1 + letter of group = switch to group
            Key(
                [mod],
                i.name,
                lazy.group[i.name].toscreen(),
                desc="Switch to group {}".format(i.name),
            ),
            # mod1 + shift + letter of group = switch to & move focused window to group
            Key(
                [mod, "shift"],
                i.name,
                lazy.window.togroup(i.name, switch_group=True),
                desc="Switch to & move focused window to group {}".format(i.name),
            ),
            # Or, use below if you prefer not to switch to that group.
            # # mod1 + shift + letter of group = move focused window to group
            # Key([mod, "shift"], i.name, lazy.window.togroup(i.name),
            #     desc="move focused window to group {}".format(i.name)),
        ]
    )

# --------------------------------------------------
"""
custom_groups = [Group(i) for i in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]]
for i, val in enumerate(custom_groups):
    i += 1
    keys.extend(
        [
            Key(
                [mod],
                str(i),
                lazy.group[val].toscreen(),
                desc="Switch to group {}".format(val.name),
            ),
            Key(
                [mod, "shift"],
                str(i),
                lazy.window.togroup(val.name, switch_group=True),
                desc="Switch to & move focused window to group {}".format(val.name),
            ),
        ]
    )
"""
layouts = [
    # Try more layouts by unleashing below layouts.

    layout.MonadTall(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.MonadWide(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.Columns(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.Stack(num_stacks=2, border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.Bsp(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.Matrix(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.RatioTile(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.Tile(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.TreeTab(border_width=2,single_margin=0, margin=5),
    layout.VerticalTile(border_width=2,single_margin=0, margin=5, border_focus = colors["focus"]),
    layout.Zoomy(border_width=2,single_margin=0, margin=5),
    layout.Max(),
]

widget_defaults = dict(
    font="Go-Mono Nerd Font",
    fontsize=12,
    padding=3,
)
extension_defaults = widget_defaults.copy()

screens = [
    Screen(
        top=bar.Bar(
            [
                widget.GroupBox(highlight_method='block', font='Hack Nerd Font', foreground=colors["fg"], background=colors["prim2"], inactive=colors["fg2"], this_current_screen_border = colors["prim1"], disable_drag=True),
                widget.TextBox(text='\ueb70 ', fontsize=32, padding=-4, foreground=colors["prim2"], background=colors["prim1"], font="Hack Nerd Font"),
                widget.Chord(background=colors["prim1"]),
                widget.TextBox(text='\ueb70', fontsize=32, padding=-4, foreground=colors["prim1"], font="Hack Nerd Font"),
                widget.Spacer(),
                widget.Systray(),
                widget.TextBox(text=' \ueb6f',fontsize=32, padding=-4, foreground=colors["prim1"], font="Hack Nerd Font"),
                widget.CurrentLayout(background=colors["prim1"]),
                widget.TextBox(text=' \ueb6f',fontsize=32, padding=-4, foreground=colors["prim2"], background=colors["prim1"], font="Hack Nerd Font"),
                widget.Net(format="\ueaa1 {up} \uea9a {down}", prefix='k', background=colors["prim2"]),
                widget.TextBox(text=' \ueb6f',fontsize=32, padding=-4, foreground=colors["prim1"], background=colors["prim2"], font="Hack Nerd Font"),
                widget.PulseVolume(background=colors["prim1"], update_interval=0.1),
                widget.TextBox(text=' \ueb6f',fontsize=32, padding=-4, foreground=colors["prim2"], background=colors["prim1"], font="Hack Nerd Font"),
                widget.Battery(background=colors["prim2"], format='{percent:2.0%}'),
                #widget.BatteryIcon(background=colors["prim2"], update_interval=1),
                widget.BatteryIcon(background=colors["prim2"], theme_path="~/.config/qtile/batteryicons", update_interval=1),
                widget.TextBox(text=' \ueb6f',fontsize=32, padding=-4, foreground=colors["prim1"], background=colors["prim2"], font="Hack Nerd Font"),
                widget.Clock(format="%Y-%m-%d %a %H:%M %p   ", background=colors["prim1"]),
            ],
            24,
            background=colors["bg"],
            opacity=1,
            border_width=[0, 0, 0, 0],  # Draw top and bottom borders
            border_color=["ff00ff", "ff00ff", "ff00ff", "ff00ff"]  # Borders are magenta
        ),
    ),
]

# Drag floating layouts.
mouse = [
    Drag([mod], "Button1", lazy.window.set_position_floating(), start=lazy.window.get_position()),
    Drag([mod], "Button3", lazy.window.set_size_floating(), start=lazy.window.get_size()),
    Click([mod], "Button2", lazy.window.bring_to_front()),
]
>>>>>>> 81e93048a384aa5f8d72948bafaaa4af35a4d707

main = None
dgroups_key_binder = None
dgroups_app_rules = []
follow_mouse_focus = True
bring_front_click = False
cursor_warp = True
auto_fullscreen = True
focus_on_window_activation = 'urgent'
wmname = 'LG3D'
